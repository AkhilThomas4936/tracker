{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js\";\nimport React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid } from \"@material-ui/core\"; // import \"./Styles.css\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  btn: {\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\"\n  }\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const team = [];\n    const {\n      friends\n    } = data;\n    console.log(friends);\n    friends.map(friend => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const removeFriend = index => () => {\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\n    setCounter(prevCounter => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Invite your team\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, indexes.map(index => {\n    const fieldName = `friends[${index}]`;\n    return (\n      /*#__PURE__*/\n      // <fieldset name={fieldName} key={fieldName}>\n      //   <label>\n      //     Person {index + 1}:\n      //     <input type=\"text\" name={`${fieldName}.email`} ref={register} />\n      //   </label>\n      //   <button type=\"button\" onClick={removeFriend(index)}>\n      //     Remove\n      //   </button>\n      // </fieldset>\n      React.createElement(Fragment, {\n        key: fieldName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        inputRef: register({\n          required: true,\n          minLength: 3,\n          validate: value => {\n            return !!value.trim();\n          }\n        }),\n        type: \"text\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: `${fieldName}.email`,\n        autoComplete: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: \"crimson\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \"Please enter a valid email\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: classes.btn,\n        type: \"button\",\n        onClick: removeFriend(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, \"Remove\"))\n    );\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.btn,\n    type: \"button\",\n    onClick: addFriend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Add Friend\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.btn,\n    type: \"button\",\n    onClick: clearFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Clear Team\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.btn,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default NewTest;","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js"],"names":["React","Fragment","useForm","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","btn","background","border","borderRadius","boxShadow","color","height","padding","NewTest","classes","indexes","setIndexes","useState","counter","setCounter","register","handleSubmit","errors","onSubmit","data","team","friends","console","log","map","friend","push","email","addFriend","prevIndexes","prevCounter","removeFriend","index","filter","item","clearFriends","fieldName","required","minLength","validate","value","trim"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\n\n// import \"./Styles.css\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  btn: {\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n  },\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0);\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    const team = [];\n    const { friends } = data;\n    console.log(friends);\n    friends.map((friend) => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes((prevIndexes) => [...prevIndexes, counter]);\n    setCounter((prevCounter) => prevCounter + 1);\n  };\n\n  const removeFriend = (index) => () => {\n    setIndexes((prevIndexes) => [\n      ...prevIndexes.filter((item) => item !== index),\n    ]);\n    setCounter((prevCounter) => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Invite your team\n        </Typography>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          {indexes.map((index) => {\n            const fieldName = `friends[${index}]`;\n            return (\n              // <fieldset name={fieldName} key={fieldName}>\n              //   <label>\n              //     Person {index + 1}:\n              //     <input type=\"text\" name={`${fieldName}.email`} ref={register} />\n              //   </label>\n\n              //   <button type=\"button\" onClick={removeFriend(index)}>\n              //     Remove\n              //   </button>\n              // </fieldset>\n              <Fragment key={fieldName}>\n                <TextField\n                  inputRef={register({\n                    required: true,\n                    minLength: 3,\n                    validate: (value) => {\n                      return !!value.trim();\n                    },\n                  })}\n                  type=\"text\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name={`${fieldName}.email`}\n                  autoComplete=\"email\"\n                />\n                {errors.email && (\n                  <p style={{ color: \"crimson\" }}>Please enter a valid email</p>\n                )}\n                <button\n                  className={classes.btn}\n                  type=\"button\"\n                  onClick={removeFriend(index)}\n                >\n                  Remove\n                </button>\n              </Fragment>\n            );\n          })}\n\n          <button className={classes.btn} type=\"button\" onClick={addFriend}>\n            Add Friend\n          </button>\n          <button className={classes.btn} type=\"button\" onClick={clearFriends}>\n            Clear Team\n          </button>\n          <input className={classes.btn} type=\"submit\" />\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default NewTest;\n"]},"metadata":{},"sourceType":"module"}