{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Project.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProjects } from \"../actions/projects\";\nimport project1 from \"../imgs/project.png\";\nimport team from \"../imgs/team.svg\";\nimport bugImage from \"../imgs/bug.png\";\nimport { Grid, Container, makeStyles, CssBaseline, Paper, Typography, LinearProgress } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  heading: {\n    color: \"#1976d2\"\n  },\n  team: {\n    float: \"left\"\n  },\n  img: {\n    height: \"6rem\",\n    width: \"6.5rem\"\n  },\n  container: {\n    display: \"inline-grid\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridAutoFlow: \"column\"\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  team: {\n    height: \"5rem\",\n    width: \"5rem\"\n  },\n  li: {\n    listStyle: \"none\",\n    color: \"blue\"\n  }\n}));\n\nconst Project = ({\n  project,\n  getProjects\n}) => {\n  useEffect(() => {\n    console.log(\"runs\");\n    getProjects();\n  }, []);\n  const classes = useStyles();\n\n  if (!project) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: project1,\n    alt: \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, project.projectName)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, `Created by: ${project.createdBy.split(\"@\")[0]}`), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.team,\n    src: team,\n    alt: \"team\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, project.teamMembers.map((member, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, member.split(\"@\")[0])))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.team,\n    src: bugImage,\n    alt: \"bug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, project.bugs.map(bug => /*#__PURE__*/React.createElement(\"li\", {\n    key: bug.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, bug.title))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"First item\")))));\n};\n\nProject.propTypes = {\n  project: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId\n  } = match.params;\n  const {\n    yourProjects\n  } = state.projects;\n  const project = yourProjects[projectId];\n  return {\n    project\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Project);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Project.js"],"names":["React","useEffect","connect","PropTypes","getProjects","project1","bugImage","Grid","Container","makeStyles","CssBaseline","Paper","Typography","LinearProgress","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","paddingBottom","heading","color","team","float","img","height","width","container","gridTemplateRows","gridTemplateColumns","gridAutoFlow","item","justifyContent","li","listStyle","Project","project","console","log","classes","projectName","createdBy","split","teamMembers","map","member","index","bugs","bug","id","title","propTypes","object","isRequired","mapStateToProps","state","match","projectId","params","yourProjects","projects"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProjects } from \"../actions/projects\";\nimport project1 from \"../imgs/project.png\";\nimport team from \"../imgs/team.svg\";\nimport bugImage from \"../imgs/bug.png\";\nimport {\n  Grid,\n  Container,\n  makeStyles,\n  CssBaseline,\n  Paper,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  heading: {\n    color: \"#1976d2\",\n  },\n  team: {\n    float: \"left\",\n  },\n  img: {\n    height: \"6rem\",\n    width: \"6.5rem\",\n  },\n  container: {\n    display: \"inline-grid\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridAutoFlow: \"column\",\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  team: {\n    height: \"5rem\",\n    width: \"5rem\",\n  },\n  li: {\n    listStyle: \"none\",\n    color: \"blue\",\n  },\n}));\n\nconst Project = ({ project, getProjects }) => {\n  useEffect(() => {\n    console.log(\"runs\");\n    getProjects();\n  }, []);\n  const classes = useStyles();\n\n  if (!project) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Paper elevation={3} className={classes.paper}>\n        <img className={classes.img} src={project1} alt=\"project\" />\n        <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\n          <strong>{project.projectName}</strong>\n        </Typography>\n        <p>{`Created by: ${project.createdBy.split(\"@\")[0]}`}</p>\n        <Grid container className={classes.container}>\n          <Grid item className={classes.item}>\n            {/* <Grid container>\n              <Grid item> */}\n            <img className={classes.team} src={team} alt=\"team\" />\n            {/* </Grid>\n              <Grid item> */}\n            <ul>\n              {project.teamMembers.map((member, index) => (\n                <li className={classes.li}>{member.split(\"@\")[0]}</li>\n              ))}\n            </ul>\n            {/* </Grid>\n            </Grid> */}\n          </Grid>\n          <Grid item className={classes.item}>\n            <img className={classes.team} src={bugImage} alt=\"bug\" />\n            <ul>\n              {project.bugs.map((bug) => (\n                <li key={bug.id}>{bug.title}</li>\n              ))}\n            </ul>\n\n            <h1>First item</h1>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n};\n\nProject.propTypes = {\n  project: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state, { match }) {\n  const { projectId } = match.params;\n  const { yourProjects } = state.projects;\n  const project = yourProjects[projectId];\n\n  return {\n    project,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(Project);\n"]},"metadata":{},"sourceType":"module"}