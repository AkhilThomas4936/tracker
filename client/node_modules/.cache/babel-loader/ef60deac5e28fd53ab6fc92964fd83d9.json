{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Register.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid, Paper } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"5rem\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Register({\n  registerUser,\n  isAuthenticated\n}) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm();\n  const classes = useStyles();\n\n  const handleOnSubmit = data => {\n    const {\n      username,\n      email,\n      password\n    } = data;\n    registerUser({\n      username,\n      email,\n      password\n    });\n  }; // const onClick = () => {\n  //   setAlert(\"Successfully registered\", \"success\");\n  // };\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleOnSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 3,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Please enter a Username\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 3,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid email\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 6,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Password should be at least 6 characters\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      validate: value => {\n        if (value === getValues()[\"password\"]) {\n          return true;\n        } else {\n          return \"passwords do not match\";\n        }\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"The passwords do not match\"), /*#__PURE__*/React.createElement(Button // onClick={onClick}\n  , {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#1976d2\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#1976d2\",\n      margin: 0\n    },\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Already have an account? \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: \"none\",\n      color: \"#1976d2\"\n    },\n    to: \"/login\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Sign In\"))))));\n}\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  registerUser: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    isAuthenticated\n  } = state.auth;\n  return {\n    isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(Register);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Register.js"],"names":["React","useForm","Link","Redirect","connect","registerUser","PropTypes","LockOutlinedIcon","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","Paper","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","paddingBottom","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Register","isAuthenticated","register","handleSubmit","errors","getValues","classes","handleOnSubmit","data","username","email","password","required","minLength","validate","value","trim","color","confirmPassword","textDecoration","propTypes","setAlert","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"5rem\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Register({ registerUser, isAuthenticated }) {\n  const { register, handleSubmit, errors, getValues } = useForm();\n  const classes = useStyles();\n\n  const handleOnSubmit = (data) => {\n    const { username, email, password } = data;\n    registerUser({ username, email, password });\n  };\n\n  // const onClick = () => {\n  //   setAlert(\"Successfully registered\", \"success\");\n  // };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Paper elevation={3} className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form\n          onSubmit={handleSubmit(handleOnSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 3,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoFocus\n          />\n          {errors.username && (\n            <p style={{ color: \"crimson\" }}>Please enter a Username</p>\n          )}\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 3,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n          />\n          {errors.email && (\n            <p style={{ color: \"crimson\" }}>Please enter a valid email</p>\n          )}\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 6,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n          {errors.password && (\n            <p style={{ color: \"crimson\" }}>\n              Password should be at least 6 characters\n            </p>\n          )}\n          <TextField\n            inputRef={register({\n              validate: (value) => {\n                if (value === getValues()[\"password\"]) {\n                  return true;\n                } else {\n                  return \"passwords do not match\";\n                }\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"password1\"\n          />\n          {errors.confirmPassword && (\n            <p style={{ color: \"crimson\" }}>The passwords do not match</p>\n          )}\n\n          <Button\n            // onClick={onClick}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n\n          <Grid container>\n            <Grid item xs>\n              <p style={{ color: \"#1976d2\", margin: 0 }} variant=\"body2\">\n                {\"Already have an account? \"}\n              </p>\n            </Grid>\n            <Grid item>\n              <Link\n                style={{ textDecoration: \"none\", color: \"#1976d2\" }}\n                to=\"/login\"\n                variant=\"body2\"\n              >\n                {\"Sign In\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  registerUser: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { isAuthenticated } = state.auth;\n  return {\n    isAuthenticated,\n  };\n}\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n"]},"metadata":{},"sourceType":"module"}