{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Alerts.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(0)\n    }\n  }\n}));\n\nfunction Alerts({\n  alerts\n}) {\n  const classes = useStyles();\n  const [open] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, alerts.map(alert => /*#__PURE__*/React.createElement(Snackbar, {\n    key: alert.id,\n    open: open,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    classes: classes.alert,\n    variant: \"filled\",\n    severity: alert.alertType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, alert.msg))));\n}\n\nAlert.propTypes = {\n  alerts: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    alerts: state.alert\n  };\n}\n\nexport default connect(mapStateToProps)(Alerts);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Alerts.js"],"names":["React","useState","connect","PropTypes","makeStyles","Snackbar","Alert","useStyles","theme","root","width","marginTop","spacing","Alerts","alerts","classes","open","map","alert","id","vertical","horizontal","alertType","msg","propTypes","array","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AAQA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AAC1B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,IAAD,IAASf,QAAQ,CAAC,IAAD,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACG,GAAP,CAAYC,KAAD,iBACV,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,YAAY,EAAE;AACZI,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEN,OAAO,CAACG,KADnB;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,QAAQ,EAAEA,KAAK,CAACI,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,KAAK,CAACK,GALT,CARF,CADD,CADH,CADF;AAsBD;;AAEDjB,KAAK,CAACkB,SAAN,GAAkB;AAChBV,EAAAA,MAAM,EAAEX,SAAS,CAACsB;AADF,CAAlB;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLb,IAAAA,MAAM,EAAEa,KAAK,CAACT;AADT,GAAP;AAGD;;AACD,eAAehB,OAAO,CAACwB,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(0),\n    },\n  },\n}));\nfunction Alerts({ alerts }) {\n  const classes = useStyles();\n  const [open] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      {alerts.map((alert) => (\n        <Snackbar\n          key={alert.id}\n          open={open}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Alert\n            classes={classes.alert}\n            variant=\"filled\"\n            severity={alert.alertType}\n          >\n            {alert.msg}\n          </Alert>\n        </Snackbar>\n      ))}\n    </div>\n  );\n}\n\nAlert.propTypes = {\n  alerts: PropTypes.array,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    alerts: state.alert,\n  };\n}\nexport default connect(mapStateToProps)(Alerts);\n"]},"metadata":{},"sourceType":"module"}