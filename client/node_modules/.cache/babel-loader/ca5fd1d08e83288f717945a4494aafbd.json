{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js\";\nimport React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid } from \"@material-ui/core\"; // import \"./Styles.css\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  }\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    const team = [];\n    const {\n      friends\n    } = data;\n    console.log(friends);\n    friends.map(friend => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const removeFriend = index => () => {\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\n    setCounter(prevCounter => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, indexes.map(index => {\n    const fieldName = `teammate[${index}]`;\n    return (\n      /*#__PURE__*/\n      // <fieldset name={fieldName} key={fieldName}>\n      //   <label>\n      //     Person {index + 1}:\n      //     <input type=\"text\" name={`${fieldName}.email`} ref={register} />\n      //   </label>\n      //   <button type=\"button\" onClick={removeFriend(index)}>\n      //     Remove\n      //   </button>\n      // </fieldset>\n      React.createElement(Fragment, {\n        key: fieldName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        inputRef: register({\n          required: true,\n          minLength: 3,\n          validate: value => {\n            return !!value.trim();\n          }\n        }),\n        type: \"text\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: fieldName,\n        autoComplete: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: \"crimson\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, \"Please enter a valid email\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: removeFriend(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"Remove\"))\n    );\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addFriend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Add Friend\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: clearFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Clear Team\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NewTest;","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js"],"names":["React","Fragment","useForm","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","NewTest","classes","indexes","setIndexes","useState","counter","setCounter","register","handleSubmit","onSubmit","data","team","friends","console","log","map","friend","push","email","addFriend","prevIndexes","prevCounter","removeFriend","index","filter","item","clearFriends","fieldName","required","minLength","validate","value","trim","errors","color"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\n\n// import \"./Styles.css\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0);\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    const team = [];\n    const { friends } = data;\n    console.log(friends);\n    friends.map((friend) => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes((prevIndexes) => [...prevIndexes, counter]);\n    setCounter((prevCounter) => prevCounter + 1);\n  };\n\n  const removeFriend = (index) => () => {\n    setIndexes((prevIndexes) => [\n      ...prevIndexes.filter((item) => item !== index),\n    ]);\n    setCounter((prevCounter) => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n      {indexes.map((index) => {\n        const fieldName = `teammate[${index}]`;\n        return (\n          // <fieldset name={fieldName} key={fieldName}>\n          //   <label>\n          //     Person {index + 1}:\n          //     <input type=\"text\" name={`${fieldName}.email`} ref={register} />\n          //   </label>\n\n          //   <button type=\"button\" onClick={removeFriend(index)}>\n          //     Remove\n          //   </button>\n          // </fieldset>\n          <Fragment key={fieldName}>\n            <TextField\n              inputRef={register({\n                required: true,\n                minLength: 3,\n                validate: (value) => {\n                  return !!value.trim();\n                },\n              })}\n              type=\"text\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name={fieldName}\n              autoComplete=\"email\"\n            />\n            {errors.email && (\n              <p style={{ color: \"crimson\" }}>Please enter a valid email</p>\n            )}\n            <button type=\"button\" onClick={removeFriend(index)}>\n              Remove\n            </button>\n          </Fragment>\n        );\n      })}\n\n      <button type=\"button\" onClick={addFriend}>\n        Add Friend\n      </button>\n      <button type=\"button\" onClick={clearFriends}>\n        Clear Team\n      </button>\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default NewTest;\n"]},"metadata":{},"sourceType":"module"}