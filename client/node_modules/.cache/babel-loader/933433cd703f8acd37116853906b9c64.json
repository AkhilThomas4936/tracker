{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport { changeStatus, changeAssignedTo } from \"../actions/bug\"; // import PropTypes from \"prop-types\";\n\nimport bugImage from \"../imgs/bug.png\";\nimport { Typography, LinearProgress, Container, Paper, Grid, CssBaseline, makeStyles, NativeSelect, FormControl, withStyles, InputBase, Chip } from \"@material-ui/core\";\nconst BootstrapInput = withStyles(theme => ({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  root: {\n    flexGrow: 1\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\"\n  },\n  heading: {\n    color: \"#1976d2\",\n    textTransform: \"capitalize\"\n  },\n  item: {\n    marginRight: \"1rem\"\n  },\n  container1: {\n    display: \"inlineGrid\",\n    gridGap: \"3px\"\n  },\n  item1: {\n    display: \" flex\",\n    justifyContent: \" center\",\n    alignItems: \"center\",\n    fontSize: \"1em\"\n  }\n}));\n\nconst Bug = ({\n  projectId,\n  project,\n  bugId,\n  getProjects,\n  email,\n  bug,\n  status,\n  changeStatus,\n  changeAssignedTo\n}) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const classes = useStyles();\n  const history = useHistory();\n  const Status = [\"Open\", \"In progress\", \"closed\"];\n  const [statusValue, setStatus] = useState(\"\");\n\n  const handleChange = e => {\n    setStatus(e.target.value);\n    const payload = {\n      status: e.target.value,\n      projectName: project.projectName,\n      bugId: bug._id\n    };\n    changeStatus(payload, history, projectId, bugId);\n  };\n\n  let chip;\n\n  if (status === \"Open\") {\n    chip = /*#__PURE__*/React.createElement(Chip, {\n      label: status,\n      style: {\n        backgroundColor: \"MediumSeaGreen\",\n        color: \"white\",\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    });\n  } else if (status === \"In progress\") {\n    chip = /*#__PURE__*/React.createElement(Chip, {\n      label: status,\n      style: {\n        backgroundColor: \"Tomato\",\n        color: \"white\",\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    });\n  } else {\n    chip = /*#__PURE__*/React.createElement(Chip, {\n      label: status,\n      style: {\n        backgroundColor: \"SlateBlue\",\n        color: \"white\",\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (!status) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xl\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \" rgb(217, 226, 226)\",\n      padding: \"2rem 3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: bugImage,\n    alt: \"bug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"0.2rem 2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, project.bugs[bugId].title))))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, `by ${project.bugs[bugId].createdBy} on ${project.bugs[bugId].date.split(\"T\")[0]}`)), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Expected result :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].expectedResult), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"Actual result :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].actualResult), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Status :\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, chip), project.bugs[bugId].assignedTo === email || email === project.bugs[bugId].createdBy ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    input: /*#__PURE__*/React.createElement(BootstrapInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 26\n      }\n    }),\n    onChange: e => handleChange(e),\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, \"Change status\"), Status.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, status))))) : null), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Assigned to :\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, project.bugs[bugId].assignedTo.split(\"@\")[0])), email === project.bugs[bugId].createdBy && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    input: /*#__PURE__*/React.createElement(BootstrapInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 26\n      }\n    }),\n    onChange: e => handleChange(e),\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, \"Change \"), project.teamMembers.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, status))))))));\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId,\n    bugId\n  } = match.params;\n  const {\n    yourProjects\n  } = state.projects;\n  const project = yourProjects[projectId];\n  let bug;\n  let status;\n\n  if (project) {\n    bug = project.bugs[bugId];\n\n    if (project.bugs[bugId]) {\n      status = project.bugs[bugId].status;\n    }\n  }\n\n  const email = state.auth.email;\n  return {\n    projectId,\n    bugId,\n    project,\n    email,\n    bug,\n    status\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects,\n  changeStatus,\n  changeAssignedTo\n})(Bug);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js"],"names":["React","useEffect","useState","useHistory","connect","getProjects","changeStatus","changeAssignedTo","bugImage","Typography","LinearProgress","Container","Paper","Grid","CssBaseline","makeStyles","NativeSelect","FormControl","withStyles","InputBase","Chip","BootstrapInput","theme","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","marginTop","spacing","display","flexDirection","paddingBottom","root","flexGrow","img","height","width","heading","color","textTransform","item","marginRight","container1","gridGap","item1","justifyContent","alignItems","Bug","projectId","project","bugId","email","bug","status","classes","history","Status","statusValue","setStatus","handleChange","e","target","value","payload","projectName","_id","chip","bugs","title","createdBy","date","split","margin","expectedResult","actualResult","assignedTo","map","index","teamMembers","propTypes","mapStateToProps","state","match","params","yourProjects","projects","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport { changeStatus, changeAssignedTo } from \"../actions/bug\";\n// import PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\n\nimport {\n  Typography,\n  LinearProgress,\n  Container,\n  Paper,\n  Grid,\n  CssBaseline,\n  makeStyles,\n  NativeSelect,\n  FormControl,\n  withStyles,\n  InputBase,\n  Chip,\n} from \"@material-ui/core\";\n\nconst BootstrapInput = withStyles((theme) => ({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\",\n  },\n  heading: {\n    color: \"#1976d2\",\n    textTransform: \"capitalize\",\n  },\n  item: {\n    marginRight: \"1rem\",\n  },\n  container1: {\n    display: \"inlineGrid\",\n    gridGap: \"3px\",\n  },\n  item1: {\n    display: \" flex\",\n    justifyContent: \" center\",\n    alignItems: \"center\",\n    fontSize: \"1em\",\n  },\n}));\n\nconst Bug = ({\n  projectId,\n  project,\n  bugId,\n  getProjects,\n  email,\n  bug,\n  status,\n  changeStatus,\n  changeAssignedTo,\n}) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  const classes = useStyles();\n  const history = useHistory();\n  const Status = [\"Open\", \"In progress\", \"closed\"];\n\n  const [statusValue, setStatus] = useState(\"\");\n  const handleChange = (e) => {\n    setStatus(e.target.value);\n    const payload = {\n      status: e.target.value,\n      projectName: project.projectName,\n      bugId: bug._id,\n    };\n    changeStatus(payload, history, projectId, bugId);\n  };\n\n  let chip;\n  if (status === \"Open\") {\n    chip = (\n      <Chip\n        label={status}\n        style={{\n          backgroundColor: \"MediumSeaGreen\",\n          color: \"white\",\n          width: \"100px\",\n        }}\n      />\n    );\n  } else if (status === \"In progress\") {\n    chip = (\n      <Chip\n        label={status}\n        style={{\n          backgroundColor: \"Tomato\",\n          color: \"white\",\n          width: \"100px\",\n        }}\n      />\n    );\n  } else {\n    chip = (\n      <Chip\n        label={status}\n        style={{\n          backgroundColor: \"SlateBlue\",\n          color: \"white\",\n          width: \"100px\",\n        }}\n      />\n    );\n  }\n\n  if (!status) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xl\" style={{ padding: 0 }}>\n      <CssBaseline />\n      <div\n        style={{ backgroundColor: \" rgb(217, 226, 226)\", padding: \"2rem 3rem\" }}\n      >\n        <Grid container>\n          <Grid item className={classes.item}>\n            <img className={classes.img} src={bugImage} alt=\"bug\" />\n          </Grid>\n          <Grid item className={classes.item}>\n            <Paper style={{ padding: \"0.2rem 2rem\" }}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                className={classes.heading}\n              >\n                <strong>{project.bugs[bugId].title}</strong>\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n        <p>{`by ${project.bugs[bugId].createdBy} on ${\n          project.bugs[bugId].date.split(\"T\")[0]\n        }`}</p>\n      </div>\n      <Paper elevation={3} className={classes.paper}>\n        <h4>Expected result :</h4>\n        <p style={{ margin: 0 }}>{project.bugs[bugId].expectedResult}</p>\n\n        <h4>Actual result :</h4>\n        <p style={{ margin: 0 }}>{project.bugs[bugId].actualResult}</p>\n\n        <Grid container className={classes.container1}>\n          <Grid item className={classes.item1}>\n            <h4>Status :</h4>\n          </Grid>\n          <Grid item className={classes.item1}>\n            {chip}\n          </Grid>\n\n          {project.bugs[bugId].assignedTo === email ||\n          email === project.bugs[bugId].createdBy ? (\n            <Grid item className={classes.item1}>\n              <FormControl>\n                <NativeSelect\n                  input={<BootstrapInput />}\n                  onChange={(e) => handleChange(e)}\n                  placeholder=\"Status\"\n                >\n                  <option value=\"\">Change status</option>\n                  {Status.map((status, index) => (\n                    <option key={index} value={status}>\n                      {status}\n                    </option>\n                  ))}\n                </NativeSelect>\n              </FormControl>\n            </Grid>\n          ) : null}\n        </Grid>\n        <h4>Assigned to :</h4>\n\n        <Grid container className={classes.container1}>\n          <Grid item className={classes.item1}>\n            <p style={{ margin: 0 }}>\n              {project.bugs[bugId].assignedTo.split(\"@\")[0]}\n            </p>\n          </Grid>\n          {email === project.bugs[bugId].createdBy && (\n            <Grid item className={classes.item1}>\n              <FormControl>\n                <NativeSelect\n                  input={<BootstrapInput />}\n                  onChange={(e) => handleChange(e)}\n                  placeholder=\"Status\"\n                >\n                  <option value=\"\">Change </option>\n                  {project.teamMembers.map((status, index) => (\n                    <option key={index} value={status}>\n                      {status}\n                    </option>\n                  ))}\n                </NativeSelect>\n              </FormControl>\n            </Grid>\n          )}\n        </Grid>\n      </Paper>\n    </Container>\n  );\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, { match }) {\n  const { projectId, bugId } = match.params;\n  const { yourProjects } = state.projects;\n  const project = yourProjects[projectId];\n  let bug;\n  let status;\n\n  if (project) {\n    bug = project.bugs[bugId];\n    if (project.bugs[bugId]) {\n      status = project.bugs[bugId].status;\n    }\n  }\n\n  const email = state.auth.email;\n\n  return {\n    projectId,\n    bugId,\n    project,\n    email,\n    bug,\n    status,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects,\n  changeStatus,\n  changeAssignedTo,\n})(Bug);\n"]},"metadata":{},"sourceType":"module"}