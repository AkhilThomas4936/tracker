{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport { Typography, LinearProgress, Container, Paper, Grid, CssBaseline, makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  root: {\n    flexGrow: 1\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\"\n  },\n  heading: {\n    color: \"#1976d2\"\n  }\n}));\n\nconst Bug = ({\n  projectId,\n  project,\n  bugId,\n  getProjects\n}) => {\n  const classes = useStyles();\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  if (!project) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"grid\", {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: bugImage,\n    alt: \"bug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, project.bugs[bugId].title)))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, `by ${project.bugs[bugId].createdBy} on ${project.bugs[bugId].date.split(\"T\")[0]}`)));\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId,\n    bugId\n  } = match.params;\n  const {\n    yourProjects\n  } = state.projects;\n  const project = yourProjects[projectId];\n  return {\n    projectId,\n    bugId,\n    project\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Bug);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js"],"names":["React","useEffect","connect","getProjects","PropTypes","bugImage","Typography","LinearProgress","Container","Paper","Grid","CssBaseline","makeStyles","useStyles","theme","paper","marginTop","spacing","display","flexDirection","padding","paddingBottom","root","flexGrow","img","height","width","heading","color","Bug","projectId","project","bugId","classes","marginLeft","bugs","title","createdBy","date","split","propTypes","mapStateToProps","state","match","params","yourProjects","projects"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport {\n  Typography,\n  LinearProgress,\n  Container,\n  Paper,\n  Grid,\n  CssBaseline,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\",\n  },\n  heading: {\n    color: \"#1976d2\",\n  },\n}));\n\nconst Bug = ({ projectId, project, bugId, getProjects }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  if (!project) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xl\">\n      <CssBaseline />\n\n      <Paper elevation={3} className={classes.paper}>\n        <Grid container style={{ marginLeft: \"2rem\" }}>\n          <grid item>\n            <img className={classes.img} src={bugImage} alt=\"bug\" />\n          </grid>\n          <Grid item>\n            <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\n              <strong>{project.bugs[bugId].title}</strong>\n            </Typography>\n          </Grid>\n        </Grid>\n        <p>{`by ${project.bugs[bugId].createdBy} on ${\n          project.bugs[bugId].date.split(\"T\")[0]\n        }`}</p>\n      </Paper>\n    </Container>\n  );\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, { match }) {\n  const { projectId, bugId } = match.params;\n  const { yourProjects } = state.projects;\n  const project = yourProjects[projectId];\n\n  return {\n    projectId,\n    bugId,\n    project,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(Bug);\n"]},"metadata":{},"sourceType":"module"}