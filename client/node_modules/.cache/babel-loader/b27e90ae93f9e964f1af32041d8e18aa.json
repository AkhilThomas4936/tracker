{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport { loadUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport _ from \"lodash\";\nimport { Typography, LinearProgress, Container, Paper, Grid, CssBaseline, makeStyles, Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  root: {\n    flexGrow: 1\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\"\n  },\n  heading: {\n    color: \"#1976d2\",\n    textTransform: \"capitalize\"\n  },\n  item: {\n    marginRight: \"1rem\"\n  }\n}));\n\nconst Bug = ({\n  projectId,\n  project,\n  bugId,\n  getProjects,\n  loadUser,\n  email,\n  bug\n}) => {\n  const classes = useStyles();\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const Status = [\"Open\", \"In progress\", \"closed\"];\n\n  if (!bug) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xl\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \" rgb(217, 226, 226)\",\n      padding: \"2rem 3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: bugImage,\n    alt: \"bug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"0.2rem 2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, project.bugs[bugId].title))))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, `by ${project.bugs[bugId].createdBy} on ${project.bugs[bugId].date.split(\"T\")[0]}`)), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Expected result :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].expectedResult), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Actual result :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].actualResult), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Status :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      textTransform: \"capitalize\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].status), project.bugs[bugId].assignedTo === email || project.bugs[bugId].assignedTo === project.bugs[bugId].createdBy ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    placeholder: \"Select User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"null\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Change status\"), Status.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, item)))) : null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Assigned to :\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, project.bugs[bugId].assignedTo.split(\"@\")[0])));\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId,\n    bugId\n  } = match.params;\n  const {\n    yourProjects\n  } = state.projects;\n  const project = yourProjects[projectId];\n\n  if (project) {\n    const bug = project.bugs[bugId];\n  }\n\n  const email = state.auth.email;\n  return {\n    projectId,\n    bugId,\n    project,\n    email,\n    bug\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Bug);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Bug.js"],"names":["React","useEffect","connect","getProjects","loadUser","PropTypes","bugImage","_","Typography","LinearProgress","Container","Paper","Grid","CssBaseline","makeStyles","Button","useStyles","theme","paper","marginTop","spacing","display","flexDirection","padding","paddingBottom","root","flexGrow","img","height","width","heading","color","textTransform","item","marginRight","Bug","projectId","project","bugId","email","bug","classes","Status","backgroundColor","bugs","title","createdBy","date","split","margin","expectedResult","actualResult","status","assignedTo","map","index","propTypes","mapStateToProps","state","match","params","yourProjects","projects","auth"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport { loadUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport _ from \"lodash\";\nimport {\n  Typography,\n  LinearProgress,\n  Container,\n  Paper,\n  Grid,\n  CssBaseline,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\",\n  },\n  heading: {\n    color: \"#1976d2\",\n    textTransform: \"capitalize\",\n  },\n  item: {\n    marginRight: \"1rem\",\n  },\n}));\n\nconst Bug = ({\n  projectId,\n  project,\n  bugId,\n  getProjects,\n  loadUser,\n  email,\n  bug,\n}) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  const Status = [\"Open\", \"In progress\", \"closed\"];\n  if (!bug) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xl\" style={{ padding: 0 }}>\n      <CssBaseline />\n      <div\n        style={{ backgroundColor: \" rgb(217, 226, 226)\", padding: \"2rem 3rem\" }}\n      >\n        <Grid container>\n          <Grid item className={classes.item}>\n            <img className={classes.img} src={bugImage} alt=\"bug\" />\n          </Grid>\n          <Grid item className={classes.item}>\n            <Paper style={{ padding: \"0.2rem 2rem\" }}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                className={classes.heading}\n              >\n                <strong>{project.bugs[bugId].title}</strong>\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n        <p>{`by ${project.bugs[bugId].createdBy} on ${\n          project.bugs[bugId].date.split(\"T\")[0]\n        }`}</p>\n      </div>\n      <Paper elevation={3} className={classes.paper}>\n        <h4>Expected result :</h4>\n        <p style={{ margin: 0 }}>{project.bugs[bugId].expectedResult}</p>\n        <h4>Actual result :</h4>\n        <p style={{ margin: 0 }}>{project.bugs[bugId].actualResult}</p>\n        <h4>Status :</h4>\n        <p style={{ margin: 0, textTransform: \"capitalize\" }}>\n          {project.bugs[bugId].status}\n        </p>\n        {project.bugs[bugId].assignedTo === email ||\n        project.bugs[bugId].assignedTo === project.bugs[bugId].createdBy ? (\n          <form className=\"form\">\n            <select placeholder=\"Select User\">\n              <option value=\"null\">Change status</option>\n              {Status.map((item, index) => (\n                <option key={index}>{item}</option>\n              ))}\n            </select>\n          </form>\n        ) : null}\n\n        <h4>Assigned to :</h4>\n        <p style={{ margin: 0 }}>\n          {project.bugs[bugId].assignedTo.split(\"@\")[0]}\n        </p>\n      </Paper>\n    </Container>\n  );\n};\n\nBug.propTypes = {};\n\nfunction mapStateToProps(state, { match }) {\n  const { projectId, bugId } = match.params;\n  const { yourProjects } = state.projects;\n  const project = yourProjects[projectId];\n  if (project) {\n    const bug = project.bugs[bugId];\n  }\n  const email = state.auth.email;\n\n  return {\n    projectId,\n    bugId,\n    project,\n    email,\n    bug,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(Bug);\n"]},"metadata":{},"sourceType":"module"}