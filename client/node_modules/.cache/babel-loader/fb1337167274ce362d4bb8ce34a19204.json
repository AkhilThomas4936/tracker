{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/routing/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !auth.isAuthenticated && !auth.loading ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    isAuthenticated,\n    loading\n  } = state.auth;\n  return {\n    isAuthenticated,\n    loading\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","component","Component","auth","rest","props","isAuthenticated","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,kBACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACN,CAACF,IAAI,CAACG,eAAN,IAAyB,CAACH,IAAI,CAACI,OAA/B,gBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAGE,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAaAL,YAAY,CAACQ,SAAb,GAAyB;AACvBL,EAAAA,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AADA,CAAzB;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEN,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BK,KAAK,CAACT,IAA3C;AAEA,SAAO;AACLG,IAAAA,eADK;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeT,OAAO,CAACa,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !auth.isAuthenticated && !auth.loading ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { isAuthenticated, loading } = state.auth;\n\n  return {\n    isAuthenticated,\n    loading,\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}