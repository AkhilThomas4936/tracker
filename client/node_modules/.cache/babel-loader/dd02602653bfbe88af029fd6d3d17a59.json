{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Project.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProjects } from \"../actions/projects\";\nimport project1 from \"../imgs/project.png\";\nimport noBug from \"../imgs/noBug.svg\";\nimport { Box, Avatar, Grid, Container, makeStyles, CssBaseline, Paper, Typography, LinearProgress, Table, TableCell, TableContainer, TableHead, TableRow, TableBody, Button, Chip, useMediaQuery } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  root: {\n    flexGrow: 1\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#2e73bf\"\n  },\n  heading: {\n    color: \"#1976d2\"\n  },\n  // team: {\n  //   float: \"left\",\n  // },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\",\n    marginRight: \"3px\"\n  },\n  container: {\n    display: \"inline-grid\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"4fr 1fr\",\n    gridAutoFlow: \"column\",\n    gridGap: \"15px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      gridTemplateRows: \"1fr 1fr \",\n      gridTemplateColumns: \"1fr 1fr\"\n    }\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb(217, 226, 226)\",\n    padding: \"8rem\"\n  },\n  team: {\n    height: \"6rem\",\n    width: \"6rem\"\n  },\n  li: {\n    listStyle: \"none\",\n    color: \"blue\"\n  },\n  p: {\n    margin: 0,\n    marginLeft: \"2rem\"\n  },\n  noBug: {\n    height: \"15rem\",\n    width: \"15rem\"\n  }\n}));\n\nconst Project = ({\n  project,\n  projectId,\n  getProjects\n}) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const classes = useStyles();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  if (!project) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xl\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"3rem 1rem\",\n      backgroundColor: \"rgb(217, 226, 226)\",\n      marginBottom: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: project1,\n    alt: \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, project.projectName))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: \"none\"\n    },\n    to: `/${projectId}/newBug`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      marginLeft: \"1rem\",\n      marginTop: \"0.3rem\",\n      padding: \"0.1em 1em\",\n      color: \"white\",\n      backgroundColor: \"#2e73bf\",\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Report a bug\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${project.projectName}/${projectId}/invite`,\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      marginLeft: \"1rem\",\n      marginTop: \"0.3rem\",\n      padding: \"0.1em 1em\",\n      color: \"white\",\n      backgroundColor: \"#2e73bf\",\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Add members\")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.p,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, `Created by: ${project.createdBy.split(\"@\")[0]}`)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      textAlign: \"center\",\n      marginLeft: \" 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, project.bugs.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"4rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: noBug,\n    className: classes.noBug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"No bugs reported yet\")) : /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Box, {\n    letterSpacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, \"BUG\")), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    letterSpacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"REPORTED BY\")), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    letterSpacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, \"STATUS\")), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    letterSpacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"ASSIGNED TO\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, project.bugs.map((bug, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${projectId}/${index}`,\n    style: {\n      textDecoration: \"none\",\n      color: \"#1976d2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, bug.title)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }, bug.createdBy), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 23\n    }\n  }, (() => {\n    if (bug.status === \"Open\") {\n      return /*#__PURE__*/React.createElement(Chip, {\n        label: bug.status,\n        style: {\n          backgroundColor: \"MediumSeagreen\",\n          color: \"white\",\n          width: \"100px\" // padding: \"1rem 2rem\",\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 31\n        }\n      });\n    } else if (bug.status === \"In progress\") {\n      return /*#__PURE__*/React.createElement(Chip, {\n        label: bug.status,\n        style: {\n          backgroundColor: \"Tomato\",\n          color: \"white\",\n          width: \"100px\" // padding: \"1rem 2rem\",\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 31\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Chip, {\n        label: bug.status,\n        style: {\n          backgroundColor: \"SlateBlue\",\n          color: \"white\",\n          width: \"100px\" // padding: \"1rem 2rem\",\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 31\n        }\n      });\n    }\n  })()), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, bug.assignedTo))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginRight: \" 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"1rem 0\"\n    },\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      textAlign: \"center\"\n    },\n    letterSpacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \" TEAM MEMBERS\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, project.teamMembers.map((member, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 23\n    }\n  }, member.split(\"@\")[0]))))))))));\n};\n\nProject.propTypes = {\n  project: PropTypes.object\n};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId\n  } = match.params;\n  const {\n    yourProjects\n  } = state.projects;\n  const project = yourProjects[projectId];\n  return {\n    projectId,\n    project\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Project);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Project.js"],"names":["React","useEffect","Link","connect","PropTypes","getProjects","project1","Box","Avatar","Grid","Container","makeStyles","CssBaseline","Paper","Typography","LinearProgress","Table","TableCell","TableContainer","TableHead","TableRow","TableBody","Button","Chip","useMediaQuery","useStyles","theme","paper","marginTop","spacing","display","flexDirection","padding","paddingBottom","root","flexGrow","avatar","margin","backgroundColor","heading","color","img","height","width","marginRight","container","gridTemplateRows","gridTemplateColumns","gridAutoFlow","gridGap","breakpoints","down","item","justifyContent","alignItems","team","li","listStyle","p","marginLeft","noBug","Project","project","projectId","classes","matches","marginBottom","projectName","textDecoration","textTransform","createdBy","split","textAlign","bugs","length","table","tableHead","map","bug","index","title","status","assignedTo","teamMembers","member","propTypes","object","mapStateToProps","state","match","params","yourProjects","projects"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProjects } from \"../actions/projects\";\nimport project1 from \"../imgs/project.png\";\nimport noBug from \"../imgs/noBug.svg\";\nimport {\n  Box,\n  Avatar,\n  Grid,\n  Container,\n  makeStyles,\n  CssBaseline,\n  Paper,\n  Typography,\n  LinearProgress,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Button,\n  Chip,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#2e73bf\",\n  },\n  heading: {\n    color: \"#1976d2\",\n  },\n  // team: {\n  //   float: \"left\",\n  // },\n  img: {\n    height: \"2rem\",\n    width: \"2.5rem\",\n    marginRight: \"3px\",\n  },\n  container: {\n    display: \"inline-grid\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"4fr 1fr\",\n    gridAutoFlow: \"column\",\n    gridGap: \"15px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      gridTemplateRows: \"1fr 1fr \",\n      gridTemplateColumns: \"1fr 1fr\",\n    },\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb(217, 226, 226)\",\n    padding: \"8rem\",\n  },\n\n  team: {\n    height: \"6rem\",\n    width: \"6rem\",\n  },\n  li: {\n    listStyle: \"none\",\n    color: \"blue\",\n  },\n  p: {\n    margin: 0,\n    marginLeft: \"2rem\",\n  },\n  noBug: {\n    height: \"15rem\",\n    width: \"15rem\",\n  },\n}));\n\nconst Project = ({ project, projectId, getProjects }) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const classes = useStyles();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  if (!project) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n        <LinearProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xl\" style={{ padding: 0 }}>\n      <CssBaseline />\n\n      <div\n        style={{\n          padding: \"3rem 1rem\",\n          backgroundColor: \"rgb(217, 226, 226)\",\n          marginBottom: \"2rem\",\n        }}\n      >\n        <Grid container>\n          <Grid item>\n            <img className={classes.img} src={project1} alt=\"project\" />\n          </Grid>\n          <Grid item>\n            <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\n              <strong>{project.projectName}</strong>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Link\n              style={{ textDecoration: \"none\" }}\n              to={`/${projectId}/newBug`}\n            >\n              <Button\n                variant=\"contained\"\n                style={{\n                  marginLeft: \"1rem\",\n                  marginTop: \"0.3rem\",\n                  padding: \"0.1em 1em\",\n                  color: \"white\",\n                  backgroundColor: \"#2e73bf\",\n                  textTransform: \"none\",\n                }}\n              >\n                Report a bug\n              </Button>\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link\n              to={`/${project.projectName}/${projectId}/invite`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Button\n                variant=\"contained\"\n                style={{\n                  marginLeft: \"1rem\",\n                  marginTop: \"0.3rem\",\n                  padding: \"0.1em 1em\",\n                  color: \"white\",\n                  backgroundColor: \"#2e73bf\",\n                  textTransform: \"none\",\n                }}\n              >\n                Add members\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n\n        <p className={classes.p}>{`Created by: ${\n          project.createdBy.split(\"@\")[0]\n        }`}</p>\n      </div>\n      <Grid container className={classes.container}>\n        <Grid item style={{ textAlign: \"center\", marginLeft: \" 1rem\" }}>\n          {project.bugs.length === 0 ? (\n            <div style={{ marginTop: \"4rem\" }}>\n              <img src={noBug} className={classes.noBug} />\n              <p>No bugs reported yet</p>\n            </div>\n          ) : (\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={classes.tableHead}>\n                      {\" \"}\n                      <Box letterSpacing={2}>BUG</Box>\n                    </TableCell>\n                    <TableCell className={classes.tableHead} align=\"center\">\n                      <Box letterSpacing={2}>REPORTED BY</Box>\n                    </TableCell>\n                    <TableCell className={classes.tableHead} align=\"center\">\n                      <Box letterSpacing={2}>STATUS</Box>\n                    </TableCell>\n                    <TableCell className={classes.tableHead} align=\"center\">\n                      <Box letterSpacing={2}>ASSIGNED TO</Box>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {project.bugs.map((bug, index) => (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Link\n                          to={`/${projectId}/${index}`}\n                          style={{\n                            textDecoration: \"none\",\n                            color: \"#1976d2\",\n                          }}\n                        >\n                          {bug.title}\n                        </Link>\n                      </TableCell>\n                      <TableCell align=\"center\">{bug.createdBy}</TableCell>\n                      <TableCell align=\"center\">\n                        {(() => {\n                          if (bug.status === \"Open\") {\n                            return (\n                              <Chip\n                                label={bug.status}\n                                style={{\n                                  backgroundColor: \"MediumSeagreen\",\n                                  color: \"white\",\n                                  width: \"100px\",\n                                  // padding: \"1rem 2rem\",\n                                }}\n                              />\n                            );\n                          } else if (bug.status === \"In progress\") {\n                            return (\n                              <Chip\n                                label={bug.status}\n                                style={{\n                                  backgroundColor: \"Tomato\",\n                                  color: \"white\",\n                                  width: \"100px\",\n\n                                  // padding: \"1rem 2rem\",\n                                }}\n                              />\n                            );\n                          } else {\n                            return (\n                              <Chip\n                                label={bug.status}\n                                style={{\n                                  backgroundColor: \"SlateBlue\",\n                                  color: \"white\",\n                                  width: \"100px\",\n\n                                  // padding: \"1rem 2rem\",\n                                }}\n                              />\n                            );\n                          }\n                        })()}\n                      </TableCell>\n                      <TableCell align=\"center\">{bug.assignedTo}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Grid>\n        <Grid\n          item\n          style={{\n            marginRight: \" 1rem\",\n          }}\n        >\n          <Paper style={{ padding: \"1rem 0\" }} elevation={2}>\n            <Box style={{ textAlign: \"center\" }} letterSpacing={2}>\n              <strong> TEAM MEMBERS</strong>\n            </Box>\n            <ul>\n              {project.teamMembers.map((member, index) => (\n                <li className={classes.li} key={index}>\n                  <Grid container>\n                    <Grid item>\n                      <Avatar className={classes.avatar}></Avatar>\n                    </Grid>\n                    <Grid item>\n                      <p style={{ color: \"black\" }}>{member.split(\"@\")[0]}</p>\n                    </Grid>\n                  </Grid>\n                </li>\n              ))}\n            </ul>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nProject.propTypes = {\n  project: PropTypes.object,\n};\n\nfunction mapStateToProps(state, { match }) {\n  const { projectId } = match.params;\n  const { yourProjects } = state.projects;\n  const project = yourProjects[projectId];\n\n  return {\n    projectId,\n    project,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(Project);\n"]},"metadata":{},"sourceType":"module"}