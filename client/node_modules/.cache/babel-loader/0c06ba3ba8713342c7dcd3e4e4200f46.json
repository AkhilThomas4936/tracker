{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewBug.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\"; // import Select from \"react-select\";\n\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\nimport { FormControl, Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid, Select, MenuItem, Paper, NativeSelect, InputBase, withStyles } from \"@material-ui/core\";\nconst statusList = [\"Open\", \"In progress\", \"Closed\"];\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    marginTop: \"10px\",\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  img: {\n    height: \"4rem\",\n    width: \"4rem\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst NewBug = ({\n  projectId,\n  email,\n  getProjects,\n  teamMembers\n}) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    control\n  } = useForm();\n\n  const handleChangeStatus = e => {\n    setStatus(e.target.value);\n  };\n\n  const handleChangeTo = e => {\n    setAssignedTo(e.target.value);\n  };\n\n  const handleOnSubmit = data => {\n    console.log(data);\n  };\n\n  if (!teamMembers) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: bugImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"New bug\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleOnSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 3,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Title should be at least 3 characters\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    multiline: true,\n    fullWidth: true,\n    rows: 3,\n    id: \"expectedResult\",\n    label: \"Expected result\",\n    name: \"expectedResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), errors.expectedResult && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Please enter expected result\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    rows: 3,\n    name: \"actualresult\",\n    label: \"Actual result\",\n    type: \"text\",\n    id: \"actualResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), errors.actualResult && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"Please enter actual result\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginTop: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    input: /*#__PURE__*/React.createElement(BootstrapInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    onChange: e => handleChangeStatus(e),\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Select status\"), statusList.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, status)))), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginTop: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    input: /*#__PURE__*/React.createElement(BootstrapInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    onChange: e => handleChangeTo(e),\n    placeholder: \"Assigned to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"Assigned to\"), teamMembers.map((user, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, user)))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#1976d2\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\nNewBug.propTypes = {};\n\nfunction mapStateToProps(state, {\n  match\n}) {\n  const {\n    projectId\n  } = match.params;\n  const {\n    auth,\n    projects\n  } = state;\n  const {\n    yourProjects\n  } = projects;\n  let teamMembers;\n\n  if (yourProjects[projectId]) {\n    teamMembers = yourProjects[projectId].teamMembers;\n  }\n\n  let email;\n\n  if (auth.email) {\n    email = auth.email;\n  }\n\n  return {\n    email,\n    projectId,\n    teamMembers\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(NewBug);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewBug.js"],"names":["React","useEffect","useState","useForm","Controller","PropTypes","bugImage","connect","getProjects","FormControl","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","Select","MenuItem","Paper","NativeSelect","InputBase","withStyles","statusList","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","display","flexDirection","alignItems","paddingBottom","avatar","margin","secondary","main","form","width","submit","img","height","NewBug","projectId","email","teamMembers","assignedTo","setAssignedTo","status","setStatus","classes","register","handleSubmit","errors","getValues","control","handleChangeStatus","e","target","value","handleChangeTo","handleOnSubmit","data","console","log","required","minLength","validate","trim","title","color","expectedResult","actualResult","map","index","user","propTypes","mapStateToProps","state","match","params","auth","projects","yourProjects"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n// import Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projects\";\n\nimport {\n  FormControl,\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n  Select,\n  MenuItem,\n  Paper,\n  NativeSelect,\n  InputBase,\n  withStyles,\n} from \"@material-ui/core\";\n\nconst statusList = [\"Open\", \"In progress\", \"Closed\"];\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    marginTop: \"10px\",\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  img: {\n    height: \"4rem\",\n    width: \"4rem\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst NewBug = ({ projectId, email, getProjects, teamMembers }) => {\n  useEffect(() => {\n    getProjects();\n  }, []);\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const classes = useStyles();\n  const { register, handleSubmit, errors, getValues, control } = useForm();\n\n  const handleChangeStatus = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const handleChangeTo = (e) => {\n    setAssignedTo(e.target.value);\n  };\n\n  const handleOnSubmit = (data) => {\n    console.log(data);\n  };\n  if (!teamMembers) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Paper elevation={3} className={classes.paper}>\n        <img className={classes.img} src={bugImage} />\n        <Typography component=\"h1\" variant=\"h5\">\n          New bug\n        </Typography>\n        <form\n          onSubmit={handleSubmit(handleOnSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 3,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            label=\"Title\"\n            name=\"title\"\n            autoFocus\n          />\n          {errors.title && (\n            <p style={{ color: \"crimson\" }}>\n              Title should be at least 3 characters\n            </p>\n          )}\n          <TextField\n            inputRef={register({\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            multiline\n            fullWidth\n            rows={3}\n            id=\"expectedResult\"\n            label=\"Expected result\"\n            name=\"expectedResult\"\n          />\n          {errors.expectedResult && (\n            <p style={{ color: \"crimson\" }}>Please enter expected result</p>\n          )}\n          <TextField\n            inputRef={register({\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            multiline\n            rows={3}\n            name=\"actualresult\"\n            label=\"Actual result\"\n            type=\"text\"\n            id=\"actualResult\"\n          />\n          {errors.actualResult && (\n            <p style={{ color: \"crimson\" }}>Please enter actual result</p>\n          )}\n          <br />\n          <FormControl fullWidth style={{ marginTop: \"8px\" }}>\n            <NativeSelect\n              input={<BootstrapInput />}\n              fullWidth\n              onChange={(e) => handleChangeStatus(e)}\n              placeholder=\"Status\"\n            >\n              <option value=\"\">Select status</option>\n              {statusList.map((status, index) => (\n                <option key={index} value={status}>\n                  {status}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n          <FormControl fullWidth style={{ marginTop: \"8px\" }}>\n            <NativeSelect\n              input={<BootstrapInput />}\n              fullWidth\n              onChange={(e) => handleChangeTo(e)}\n              placeholder=\"Assigned to\"\n            >\n              <option value=\"\">Assigned to</option>\n              {teamMembers.map((user, index) => (\n                <option key={index} value={user}>\n                  {user}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n          >\n            Add\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nNewBug.propTypes = {};\nfunction mapStateToProps(state, { match }) {\n  const { projectId } = match.params;\n  const { auth, projects } = state;\n  const { yourProjects } = projects;\n  let teamMembers;\n  if (yourProjects[projectId]) {\n    teamMembers = yourProjects[projectId].teamMembers;\n  }\n  let email;\n  if (auth.email) {\n    email = auth.email;\n  }\n  return {\n    email,\n    projectId,\n    teamMembers,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(NewBug);\n"]},"metadata":{},"sourceType":"module"}