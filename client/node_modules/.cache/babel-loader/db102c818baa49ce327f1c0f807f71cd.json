{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js\";\nimport React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Paper, Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: \"2rem\",\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(0, 0, 1),\n    padding: \" 0.3rem 2rem\"\n  }\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n  const [indexes, setIndexes] = React.useState([0]);\n  const [counter, setCounter] = React.useState(1);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const team = [];\n    const {\n      friends\n    } = data;\n    console.log(friends);\n    friends.map(friend => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const removeFriend = index => () => {\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\n    setCounter(prevCounter => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Invite your teammates\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, indexes.map(index => {\n    const fieldName = `friends[${index}]`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: fieldName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      inputRef: register({\n        required: true,\n        minLength: 3,\n        validate: value => {\n          return !!value.trim();\n        }\n      }),\n      type: \"text\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: `${fieldName}.email` // autoComplete=\"email\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"crimson\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, \"Please enter a valid email\"), counter !== 1 && /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: \"#1976d2\",\n        color: \"white\"\n      },\n      className: classes.submit,\n      type: \"button\",\n      onClick: removeFriend(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, \"Remove\"));\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#1976d2\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    type: \"button\",\n    onClick: addFriend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Add email\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#1976d2\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nexport default NewTest;","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewTest.js"],"names":["React","Fragment","useForm","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Paper","Grid","useStyles","theme","paper","padding","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","NewTest","classes","indexes","setIndexes","useState","counter","setCounter","register","handleSubmit","errors","onSubmit","data","team","friends","console","log","map","friend","push","email","addFriend","prevIndexes","prevCounter","removeFriend","index","filter","item","clearFriends","fieldName","required","minLength","validate","value","trim","color"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"2rem\",\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(0, 0, 1),\n    padding: \" 0.3rem 2rem\",\n  },\n}));\n\nfunction NewTest() {\n  const classes = useStyles();\n\n  const [indexes, setIndexes] = React.useState([0]);\n  const [counter, setCounter] = React.useState(1);\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    const team = [];\n    const { friends } = data;\n    console.log(friends);\n    friends.map((friend) => team.push(friend.email));\n    console.log(team);\n  };\n\n  const addFriend = () => {\n    setIndexes((prevIndexes) => [...prevIndexes, counter]);\n    setCounter((prevCounter) => prevCounter + 1);\n  };\n\n  const removeFriend = (index) => () => {\n    setIndexes((prevIndexes) => [\n      ...prevIndexes.filter((item) => item !== index),\n    ]);\n    setCounter((prevCounter) => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Paper elevation={3} className={classes.paper}>\n        <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Invite your teammates\n        </Typography>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          {indexes.map((index) => {\n            const fieldName = `friends[${index}]`;\n            return (\n              <Fragment key={fieldName}>\n                {/* <Grid container>\n                  <Grid item> */}\n                <TextField\n                  inputRef={register({\n                    required: true,\n                    minLength: 3,\n                    validate: (value) => {\n                      return !!value.trim();\n                    },\n                  })}\n                  type=\"text\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name={`${fieldName}.email`}\n                  // autoComplete=\"email\"\n                />\n                {errors.email && (\n                  <p style={{ color: \"crimson\" }}>Please enter a valid email</p>\n                )}\n                {/* </Grid>\n                  <Grid item> */}\n                {counter !== 1 && (\n                  <Button\n                    style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n                    className={classes.submit}\n                    type=\"button\"\n                    onClick={removeFriend(index)}\n                  >\n                    Remove\n                  </Button>\n                )}\n\n                {/* </Grid>\n                </Grid> */}\n              </Fragment>\n            );\n          })}\n\n          <Button\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n            type=\"button\"\n            onClick={addFriend}\n          >\n            Add email\n          </Button>\n\n          {/* <Button\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n            type=\"button\"\n            onClick={clearFriends}\n          >\n            Clear Team\n          </Button> */}\n          <Button\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default NewTest;\n"]},"metadata":{},"sourceType":"module"}