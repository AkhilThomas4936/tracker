{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewProject.js\";\nimport React, { useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  icon: {\n    height: \"2.5rem\",\n    width: \"2.5rem\"\n  }\n}));\n\nconst NewProject = props => {\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\n\n  const handleDateChangeFrom = date => {\n    setSelectedDateFrom(date);\n    console.log(date);\n  };\n\n  const handleDateChangeTo = date => {\n    setSelectedDateTo(date);\n    console.log(date);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    control\n  } = useForm();\n  const classes = useStyles();\n\n  const handleOnSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Create Project\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleOnSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 3,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Project Name\",\n    name: \"projectName\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), errors.projectName && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Please enter a name for the project\"), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"From\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    inputRef: register,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date picker dialog\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDateFrom,\n    onChange: handleDateChangeFrom,\n    KeyboardButtonProps: {\n      \"aria-label\": \"change date\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"To\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    inputRef: register,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date picker dialog\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDateTo,\n    onChange: handleDateChangeTo,\n    KeyboardButtonProps: {\n      \"aria-label\": \"change date\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button // onClick={onClick}\n  , {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#bf1650\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};\n\nNewProject.propTypes = {};\nexport default NewProject;","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewProject.js"],"names":["React","useState","useForm","Link","Redirect","connect","registerUser","PropTypes","DateFnsUtils","AddCircleOutlineIcon","MuiPickersUtilsProvider","KeyboardDatePicker","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","icon","height","NewProject","props","selectedDateFrom","setSelectedDateFrom","Date","selectedDateTo","setSelectedDateTo","handleDateChangeFrom","date","console","log","handleDateChangeTo","register","handleSubmit","errors","getValues","control","classes","handleOnSubmit","data","required","minLength","validate","value","trim","projectName","color","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  icon: {\n    height: \"2.5rem\",\n    width: \"2.5rem\",\n  },\n}));\n\nconst NewProject = (props) => {\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\n\n  const handleDateChangeFrom = (date) => {\n    setSelectedDateFrom(date);\n    console.log(date);\n  };\n  const handleDateChangeTo = (date) => {\n    setSelectedDateTo(date);\n    console.log(date);\n  };\n  const { register, handleSubmit, errors, getValues, control } = useForm();\n  const classes = useStyles();\n  const handleOnSubmit = (data) => {\n    console.log(data);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AddCircleOutlineIcon className={classes.icon} />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Project\n        </Typography>\n        <form\n          onSubmit={handleSubmit(handleOnSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 3,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Project Name\"\n            name=\"projectName\"\n            autoFocus\n          />\n          {errors.projectName && (\n            <p style={{ color: \"crimson\" }}>\n              Please enter a name for the project\n            </p>\n          )}\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <h3>From</h3>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                inputRef={register}\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date picker dialog\"\n                format=\"MM/dd/yyyy\"\n                value={selectedDateFrom}\n                onChange={handleDateChangeFrom}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <h3>To</h3>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                inputRef={register}\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date picker dialog\"\n                format=\"MM/dd/yyyy\"\n                value={selectedDateTo}\n                onChange={handleDateChangeTo}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n\n          <Button\n            // onClick={onClick}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            style={{ backgroundColor: \"#bf1650\", color: \"white\" }}\n            className={classes.submit}\n          >\n            Create\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nNewProject.propTypes = {};\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}