{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Register.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Register() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm();\n  const classes = useStyles();\n\n  const handleOnSubmit = data => {\n    const {\n      username,\n      email,\n      password,\n      confirmPassword\n    } = data;\n    console.log(username, password, email, confirmPassword);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleOnSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 1,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\" // autoComplete=\"email\"\n    ,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Please enter a Username\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 1,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\" // autoFocus\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid email\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 6,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\" // autoComplete=\"current-password\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Password should be at least 6 characters\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 6,\n      validate: value => {\n        if (value === getValues()[\"password\"]) {\n          return true;\n        } else if (getValues()[\"password\"] === \"\") {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"The passwords do not match\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Register.js"],"names":["React","useForm","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Register","register","handleSubmit","errors","getValues","classes","handleOnSubmit","data","username","email","password","confirmPassword","console","log","required","minLength","validate","value","trim","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const { register, handleSubmit, errors, getValues } = useForm();\n  const classes = useStyles();\n\n  const handleOnSubmit = (data) => {\n    const { username, email, password, confirmPassword } = data;\n    console.log(username, password, email, confirmPassword);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form\n          onSubmit={handleSubmit(handleOnSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 1,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            // autoComplete=\"email\"\n            autoFocus\n          />\n          {errors.username && (\n            <p style={{ color: \"crimson\" }}>Please enter a Username</p>\n          )}\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 1,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            // autoFocus\n          />\n          {errors.email && (\n            <p style={{ color: \"crimson\" }}>Please enter a valid email</p>\n          )}\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 6,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            // autoComplete=\"current-password\"\n          />\n          {errors.password && (\n            <p style={{ color: \"crimson\" }}>\n              Password should be at least 6 characters\n            </p>\n          )}\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 6,\n\n              validate: (value) => {\n                if (value === getValues()[\"password\"]) {\n                  return true;\n                } else if (getValues()[\"password\"] === \"\") {\n                  return true;\n                } else {\n                  return false;\n                }\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"password1\"\n          />\n          {errors.confirmPassword && (\n            <p style={{ color: \"crimson\" }}>The passwords do not match</p>\n          )}\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}