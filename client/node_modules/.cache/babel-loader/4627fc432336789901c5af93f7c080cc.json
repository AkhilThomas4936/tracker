{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Dashboard.js\";\nimport React, { useEffect } from \"react\";\nimport { getProjects } from \"../actions/projects\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport noProjects from \"../imgs/noProjects.svg\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport Project from \"./Projects\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: \"auto\",\n    paddingBottom: \"5rem\",\n    textAlign: \"center\"\n  },\n  img: {\n    marginRight: \"2rem\",\n    height: \"30rem\",\n    width: \"30rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"20rem\",\n      width: \"20rem\"\n    }\n  },\n  alert: {\n    fontFamily: \"helvetica\",\n    fontSize: \"1.8rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1rem\"\n    }\n  },\n  btn: {\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\"\n  }\n}));\n\nfunction Dashboard({\n  getProjects,\n  yourProjects,\n  loading\n}) {\n  const classes = useStyles();\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  if (yourProjects === false) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.img,\n      src: noProjects,\n      alt: \"no active projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"You are currently not a member of any projects...!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), \"Create a new one.\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Create Project\")));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, yourProjects.map(project => /*#__PURE__*/React.createElement(Project, {\n    key: project.id,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n}\n\nDashboard.propTypes = {\n  getProjects: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    yourProjects,\n    loading\n  } = state.projects;\n  return {\n    yourProjects,\n    loading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Dashboard);","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/Dashboard.js"],"names":["React","useEffect","getProjects","connect","PropTypes","makeStyles","Button","Project","useStyles","theme","container","margin","paddingBottom","textAlign","img","marginRight","height","width","breakpoints","down","alert","fontFamily","fontSize","btn","background","border","borderRadius","boxShadow","color","padding","Dashboard","yourProjects","loading","classes","noProjects","map","project","id","propTypes","func","isRequired","mapStateToProps","state","projects"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getProjects } from \"../actions/projects\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport noProjects from \"../imgs/noProjects.svg\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport Project from \"./Projects\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: \"auto\",\n    paddingBottom: \"5rem\",\n    textAlign: \"center\",\n  },\n  img: {\n    marginRight: \"2rem\",\n    height: \"30rem\",\n    width: \"30rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"20rem\",\n      width: \"20rem\",\n    },\n  },\n  alert: {\n    fontFamily: \"helvetica\",\n    fontSize: \"1.8rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1rem\",\n    },\n  },\n  btn: {\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n  },\n}));\n\nfunction Dashboard({ getProjects, yourProjects, loading }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  if (yourProjects === false) {\n    return (\n      <div className={classes.container}>\n        <img\n          className={classes.img}\n          src={noProjects}\n          alt=\"no active projects\"\n        />\n        <p className={classes.alert}>\n          <strong>\n            You are currently not a member of any projects...!\n            <br />\n            Create a new one.\n          </strong>\n        </p>\n        <Button variant=\"contained\" className={classes.btn}>\n          <strong>Create Project</strong>\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {yourProjects.map((project) => (\n        <Project key={project.id} project={project} />\n      ))}\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { yourProjects, loading } = state.projects;\n\n  return {\n    yourProjects,\n    loading,\n  };\n}\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}