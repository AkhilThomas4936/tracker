{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewBug.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container, Grid, Paper } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  img: {\n    height: \"4rem\",\n    width: \"4rem\"\n  }\n}));\n\nconst NewBug = props => {\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm();\n\n  const handleOnSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: bugImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"New bug\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleOnSubmit),\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: true,\n      minLength: 3,\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Title should be at least 3 characters\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    multiline: true,\n    fullWidth: true,\n    id: \"expectedResult\",\n    label: \"Expected result\",\n    name: \"expectedResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), errors.expectedResult && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Please enter expected result\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      validate: value => {\n        return !!value.trim();\n      }\n    }),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    name: \"actualresult\",\n    label: \"Actual result\",\n    type: \"text\",\n    id: \"actualResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), errors.actualResult && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Please enter actual result\"), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#1976d2\",\n      color: \"white\"\n    },\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\nNewBug.propTypes = {};\nexport default NewBug;","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/tracker/tracker/client/src/components/NewBug.js"],"names":["React","useForm","PropTypes","bugImage","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","Container","Grid","Paper","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","paddingBottom","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","img","height","NewBug","props","classes","register","handleSubmit","errors","getValues","handleOnSubmit","data","console","log","required","minLength","validate","value","trim","title","color","expectedResult","actualResult","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport bugImage from \"../imgs/bug.png\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Typography,\n  makeStyles,\n  Container,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"3rem\",\n    paddingBottom: \"8rem\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  img: {\n    height: \"4rem\",\n    width: \"4rem\",\n  },\n}));\n\nconst NewBug = (props) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors, getValues } = useForm();\n\n  const handleOnSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <Paper elevation={3} className={classes.paper}>\n        <img className={classes.img} src={bugImage} />\n        <Typography component=\"h1\" variant=\"h5\">\n          New bug\n        </Typography>\n        <form\n          onSubmit={handleSubmit(handleOnSubmit)}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            inputRef={register({\n              required: true,\n              minLength: 3,\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            label=\"Title\"\n            name=\"title\"\n            autoFocus\n          />\n          {errors.title && (\n            <p style={{ color: \"crimson\" }}>\n              Title should be at least 3 characters\n            </p>\n          )}\n          <TextField\n            inputRef={register({\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            multiline\n            fullWidth\n            id=\"expectedResult\"\n            label=\"Expected result\"\n            name=\"expectedResult\"\n          />\n          {errors.expectedResult && (\n            <p style={{ color: \"crimson\" }}>Please enter expected result</p>\n          )}\n          <TextField\n            inputRef={register({\n              validate: (value) => {\n                return !!value.trim();\n              },\n            })}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            multiline\n            name=\"actualresult\"\n            label=\"Actual result\"\n            type=\"text\"\n            id=\"actualResult\"\n          />\n          {errors.actualResult && (\n            <p style={{ color: \"crimson\" }}>Please enter actual result</p>\n          )}\n          <TextField\n            inputRef={register}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"password1\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            style={{ backgroundColor: \"#1976d2\", color: \"white\" }}\n            className={classes.submit}\n          >\n            Add\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nNewBug.propTypes = {};\n\nexport default NewBug;\n"]},"metadata":{},"sourceType":"module"}